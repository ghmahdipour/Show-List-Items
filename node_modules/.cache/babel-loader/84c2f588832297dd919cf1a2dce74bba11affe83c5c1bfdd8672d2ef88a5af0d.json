{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport userServices from \"../../../../services/user.services\";\nconst initialState = {\n  loading: false,\n  data: [],\n  error: null\n};\nexport const fetchUsersListAsync = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const response = await userServices.fetchUsersList();\n  console.log(response);\n  // return response.data;\n});\n\nexport const userListSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchUsersListAsync.pending, state => {\n      state.loading = true;\n    }).addCase(fetchUsersListAsync.fulfilled, (state, action) => {\n      state.loading = false;\n      // state.data = action.payload;\n    }).addCase(fetchUsersListAsync.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {} = userListSlice.actions;\nexport default userListSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","userServices","initialState","loading","data","error","fetchUsersListAsync","response","fetchUsersList","console","log","userListSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","rejected","payload","actions","reducer"],"sources":["D:/list react/my-list-items/src/containers/landing/components/FirstList/userSlice.tsx"],"sourcesContent":["import { IUserList } from \"../../../../models/user.model\";\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport userServices from \"../../../../services/user.services\";\r\n\r\nexport interface UsersListState {\r\n  data: Array<IUserList>;\r\n  loading: boolean;\r\n  error: any;\r\n}\r\n\r\nconst initialState: UsersListState = {\r\n  loading: false,\r\n  data: [],\r\n  error: null,\r\n};\r\n\r\nexport const fetchUsersListAsync = createAsyncThunk(\r\n  \"users/fetchUsers\",\r\n  async () => {\r\n    const response: any = await userServices.fetchUsersList();\r\n    console.log(response)\r\n    // return response.data;\r\n  }\r\n);\r\n\r\nexport const userListSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsersListAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchUsersListAsync.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        // state.data = action.payload;\r\n      })\r\n      .addCase(fetchUsersListAsync.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {} = userListSlice.actions;\r\n\r\nexport default userListSlice.reducer;\r\n"],"mappings":"AACA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,OAAOC,YAAY,MAAM,oCAAoC;AAQ7D,MAAMC,YAA4B,GAAG;EACnCC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGP,gBAAgB,CACjD,kBAAkB,EAClB,YAAY;EACV,MAAMQ,QAAa,GAAG,MAAMN,YAAY,CAACO,cAAc,CAAC,CAAC;EACzDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB;AACF,CACF,CAAC;;AAED,OAAO,MAAMI,aAAa,GAAGX,WAAW,CAAC;EACvCY,IAAI,EAAE,OAAO;EACbV,YAAY;EACZW,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACV,mBAAmB,CAACW,OAAO,EAAGC,KAAK,IAAK;MAC/CA,KAAK,CAACf,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDa,OAAO,CAACV,mBAAmB,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzDF,KAAK,CAACf,OAAO,GAAG,KAAK;MACrB;IACF,CAAC,CAAC,CACDa,OAAO,CAACV,mBAAmB,CAACe,QAAQ,EAAE,CAACH,KAAK,EAAEE,MAAM,KAAK;MACxDF,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACE,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM,CAAC,CAAC,GAAGX,aAAa,CAACY,OAAO;AAEvC,eAAeZ,aAAa,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}