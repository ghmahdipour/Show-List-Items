{"ast":null,"code":"var _jsxFileName = \"D:\\\\list react\\\\my-list-items\\\\src\\\\containers\\\\landing\\\\components\\\\Chip\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport { useAppDispatch, useAppSelector } from \"../../../../redux/hooks\";\nimport { removeChip } from \"../../components/Chip/chipSlice\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChip = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    chips\n  } = useAppSelector(state => state.chip);\n  console.log(\"999999\", chips);\n  const handleDelete = data => {\n    console.log(\"888888\", data);\n    dispatch(removeChip({\n      ...data,\n      id\n    }));\n    // setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      padding: '16px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      spacing: 1,\n      children: chips.map((chip, index) => /*#__PURE__*/_jsxDEV(Chip, {\n        color: \"primary\",\n        label: chip,\n        onClick: () => handleDelete(chip),\n        onDelete: () => handleDelete(chip),\n        deleteIcon: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChip, \"w3wsNM/++XTgr/LtWRb33DFa35w=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = MyChip;\nexport default MyChip;\nvar _c;\n$RefreshReg$(_c, \"MyChip\");","map":{"version":3,"names":["React","Chip","Stack","useAppDispatch","useAppSelector","removeChip","Fragment","_Fragment","jsxDEV","_jsxDEV","MyChip","_s","dispatch","chips","state","chip","console","log","handleDelete","data","id","style","backgroundColor","padding","children","direction","spacing","map","index","color","label","onClick","onDelete","deleteIcon","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/list react/my-list-items/src/containers/landing/components/Chip/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useAppDispatch, useAppSelector } from \"../../../../redux/hooks\";\r\nimport { removeChip } from \"../../components/Chip/chipSlice\";\r\n\r\nconst MyChip: React.FC<{ }> = () => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { chips } = useAppSelector(\r\n    (state) => state.chip\r\n  );\r\n    console.log(\"999999\", chips)\r\n \r\n\r\n  const handleDelete = (data: any) => {\r\n    console.log(\"888888\", data)\r\n    dispatch(removeChip({ ...data, id }));\r\n    // setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: 'white',\r\n      padding: '16px'\r\n    }}>\r\n      <Stack direction=\"column\" spacing={1}>\r\n        {\r\n          chips.map((chip: any, index: any) => (\r\n            <Chip \r\n              color=\"primary\"\r\n              key={index} \r\n              label={chip} \r\n              onClick={() => handleDelete(chip)}\r\n              onDelete={() => handleDelete(chip)} \r\n              deleteIcon={<></>}\r\n            />\r\n          ))\r\n        }\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyChip;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,cAAc,EAAEC,cAAc,QAAQ,yBAAyB;AACxE,SAASC,UAAU,QAAQ,iCAAiC;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,MAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElC,MAAMC,QAAQ,GAAGT,cAAc,CAAC,CAAC;EAEjC,MAAM;IAAEU;EAAM,CAAC,GAAGT,cAAc,CAC7BU,KAAK,IAAKA,KAAK,CAACC,IACnB,CAAC;EACCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC;EAG9B,MAAMK,YAAY,GAAIC,IAAS,IAAK;IAClCH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,IAAI,CAAC;IAC3BP,QAAQ,CAACP,UAAU,CAAC;MAAE,GAAGc,IAAI;MAAEC;IAAG,CAAC,CAAC,CAAC;IACrC;EACF,CAAC;;EAED,oBACEX,OAAA;IAAKY,KAAK,EAAE;MACVC,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,eACAf,OAAA,CAACP,KAAK;MAACuB,SAAS,EAAC,QAAQ;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,EAEjCX,KAAK,CAACc,GAAG,CAAC,CAACZ,IAAS,EAAEa,KAAU,kBAC9BnB,OAAA,CAACR,IAAI;QACH4B,KAAK,EAAC,SAAS;QAEfC,KAAK,EAAEf,IAAK;QACZgB,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACH,IAAI,CAAE;QAClCiB,QAAQ,EAAEA,CAAA,KAAMd,YAAY,CAACH,IAAI,CAAE;QACnCkB,UAAU,eAAExB,OAAA,CAAAF,SAAA,mBAAI;MAAE,GAJbqB,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC1B,EAAA,CArCID,MAAqB;EAAA,QAERP,cAAc,EAEbC,cAAc;AAAA;AAAAkC,EAAA,GAJ5B5B,MAAqB;AAuC3B,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}