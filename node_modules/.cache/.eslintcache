[{"D:\\list react\\my-list-items\\src\\index.tsx":"1","D:\\list react\\my-list-items\\src\\reportWebVitals.ts":"2","D:\\list react\\my-list-items\\src\\serviceWorker.ts":"3","D:\\list react\\my-list-items\\src\\app\\App.tsx":"4","D:\\list react\\my-list-items\\src\\components\\Layout\\PublicLayout.tsx":"5","D:\\list react\\my-list-items\\src\\redux\\store.ts":"6","D:\\list react\\my-list-items\\src\\containers\\landing\\index.tsx":"7","D:\\list react\\my-list-items\\src\\app\\appSlice.ts":"8","D:\\list react\\my-list-items\\src\\redux\\hooks.ts":"9","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\UsersList\\index.tsx":"10","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\UsersList\\userSlice.tsx":"11","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\ProductsList\\index.tsx":"12","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\ProductsList\\productSlice.tsx":"13","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\Chip\\chipSlice.tsx":"14","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\Chip\\index.tsx":"15"},{"size":757,"mtime":1683507154288,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1661758338604,"results":"18","hashOfConfig":"17"},{"size":5436,"mtime":1676325869487,"results":"19","hashOfConfig":"17"},{"size":642,"mtime":1683557504526,"results":"20","hashOfConfig":"17"},{"size":350,"mtime":1683598397984,"results":"21","hashOfConfig":"17"},{"size":870,"mtime":1683574482813,"results":"22","hashOfConfig":"17"},{"size":399,"mtime":1683598171559,"results":"23","hashOfConfig":"17"},{"size":646,"mtime":1683550209251,"results":"24","hashOfConfig":"17"},{"size":354,"mtime":1683550609877,"results":"25","hashOfConfig":"17"},{"size":3943,"mtime":1683598186150,"results":"26","hashOfConfig":"17"},{"size":1213,"mtime":1683557037857,"results":"27","hashOfConfig":"17"},{"size":4269,"mtime":1683598168002,"results":"28","hashOfConfig":"17"},{"size":1255,"mtime":1683556717973,"results":"29","hashOfConfig":"17"},{"size":804,"mtime":1683594735066,"results":"30","hashOfConfig":"17"},{"size":1653,"mtime":1683598181341,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"jsy1pa",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\list react\\my-list-items\\src\\index.tsx",[],[],[],"D:\\list react\\my-list-items\\src\\reportWebVitals.ts",[],[],"D:\\list react\\my-list-items\\src\\serviceWorker.ts",[],[],"D:\\list react\\my-list-items\\src\\app\\App.tsx",["83","84"],[],"import { lazy, Suspense } from \"react\";\nimport { useRoutes } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport PublicLayout from \"../components/Layout/PublicLayout\";\nimport Loading from \"./Loading\";\nimport './App.css';\n\n\nfunction App() {\n  const routes = useRoutes([\n    {\n      path: \"/\",\n      element: <PublicLayout />\n    }\n  ]);\n  return (\n    <>\n      <Helmet>\n        <title>My List Items</title>\n        <meta name=\"description\" content=\"My List Items\" />\n      </Helmet>\n      <Suspense>\n        <div className=\"App min-h-screen bg-gray-100 \">{routes}</div>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","D:\\list react\\my-list-items\\src\\components\\Layout\\PublicLayout.tsx",[],[],"D:\\list react\\my-list-items\\src\\redux\\store.ts",[],[],"D:\\list react\\my-list-items\\src\\containers\\landing\\index.tsx",["85","86"],[],"D:\\list react\\my-list-items\\src\\app\\appSlice.ts",[],[],"D:\\list react\\my-list-items\\src\\redux\\hooks.ts",[],[],"D:\\list react\\my-list-items\\src\\containers\\landing\\components\\UsersList\\index.tsx",["87","88","89"],[],"D:\\list react\\my-list-items\\src\\containers\\landing\\components\\UsersList\\userSlice.tsx",["90","91"],[],"import { UserType } from \"../../../../models/user.model\";\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface UsersListState {\r\n  users: Array<UserType>;\r\n  loading: boolean;\r\n  error: any;\r\n}\r\n\r\nconst initialState: UsersListState = {\r\n  loading: false,\r\n  users: [],\r\n  error: null,\r\n};\r\n\r\nexport const fetchUsersListAsync = createAsyncThunk(\r\n  \"users/fetchUsers\",\r\n  async () => {\r\n    const response: any = await fetch('https://fakestoreapi.com/users')\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const userListSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsersListAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchUsersListAsync.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.users = action.payload;\r\n      })\r\n      .addCase(fetchUsersListAsync.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {} = userListSlice.actions;\r\n\r\nexport default userListSlice.reducer;\r\n","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\ProductsList\\index.tsx",["92","93"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../redux/hooks\";\r\nimport { fetchProductsListAsync } from \"./productSlice\";\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton  from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { addChip, clearChip } from \"../../components/Chip/chipSlice\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst ProductsList: React.FC<{ }> = () => {\r\n  \r\n  const dispatch = useAppDispatch();\r\n  const ref = useRef<any>();\r\n  const [filteredList, setFilteredList] = useState<any>([]);\r\n\r\n  async function getProductsList() {\r\n    dispatch(fetchProductsListAsync());\r\n  }\r\n\r\n  const { products, loading } = useAppSelector(\r\n    (state) => state.product\r\n  );\r\n\r\n  useEffect(() => {\r\n    getProductsList()\r\n  },[])\r\n\r\n  function mouseEnter(direction : any){\r\n    if(direction === \"down\"){\r\n        ref.current.style.overflow = 'auto';\r\n    }\r\n  }\r\n\r\n  function mouseLeave(){\r\n    ref.current.style.overflow = 'hidden';\r\n  }\r\n\r\n  const handleListItemClick = (\r\n    data: any\r\n   ) => {\r\n     dispatch(addChip({...data}));\r\n  };\r\n\r\n  const filterBySearch = (event:any) => {\r\n    const query = event.target.value;\r\n\r\n    var updatedList = [...products];\r\n    \r\n    updatedList = updatedList.filter((item: any) => {\r\n      return item.title.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n    });\r\n\r\n    setFilteredList(updatedList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(products.length > 0) {\r\n      setFilteredList(products);\r\n    }\r\n  },[products])\r\n\r\n  return (\r\n    <div \r\n      ref={ref} \r\n      onMouseOver={() => mouseEnter('down')} \r\n      onMouseLeave={() => mouseLeave()}\r\n      className=\"relative bg-white w-full overflow-hidden rounded-lg\"\r\n      style={{\r\n        maxWidth: 400,\r\n        height: '40rem',\r\n        maxHeight: '40rem',\r\n      }}\r\n    >\r\n      <List\r\n        sx={{\r\n          width: '100%',\r\n          maxWidth: 380\r\n        }}\r\n      >\r\n       <div className=\"flex gap-3 justify-center\">\r\n          <OutlinedInput\r\n            size=\"small\"\r\n            className=\"mr-t\"\r\n            style={{\r\n              width: '65%',\r\n              marginTop: 5\r\n            }}\r\n            onChange={filterBySearch} \r\n            placeholder=\"Search...\" \r\n          />\r\n          <Button \r\n            size='small'\r\n            onClick={() => {\r\n              dispatch(clearChip([]));\r\n            }}\r\n            style={{\r\n              marginTop: 5\r\n            }} variant=\"contained\">Clear List\r\n          </Button>\r\n        </div>\r\n      {\r\n        loading ? (<div \r\n          className=\"flex h-full items-center justify-center\">\r\n        <CircularProgress />\r\n      </div>) : filteredList && filteredList.length > 0 ? (\r\n            <>\r\n              {[...filteredList].map((product: any, index: number) => (\r\n                <>\r\n                  <ListItem key={product.id}>\r\n                    <ListItemButton onClick={(e: any) => handleListItemClick({\r\n                        name: product.title, \r\n                        id: uuid()\r\n                      })}>\r\n                        <ListItemAvatar>\r\n                          <img\r\n                            style={{\r\n                              width: '40px',\r\n                              height: '40px'\r\n                            }}\r\n                            src={product.image}\r\n                            alt=\"product-image\"\r\n                          />\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={product.title} secondary={product.description} />\r\n                      </ListItemButton >\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                </>\r\n              ))}\r\n            </>\r\n          ) \r\n         : (<></>)\r\n      }\r\n    </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\ProductsList\\productSlice.tsx",["94"],[],"import { ProductType } from \"../../../../models/product.model\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface productsListState {\r\n  products: Array<ProductType>;\r\n  loading: boolean;\r\n  error: any;\r\n}\r\n\r\nconst initialState: productsListState = {\r\n  loading: false,\r\n  products: [],\r\n  error: null,\r\n};\r\n\r\nexport const fetchProductsListAsync = createAsyncThunk(\r\n  \"products/fetchProducts\",\r\n  async () => {\r\n    const response: any = await fetch('https://fakestoreapi.com/products')\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const productListSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProductsListAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchProductsListAsync.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.products = action.payload;\r\n      })\r\n      .addCase(fetchProductsListAsync.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {} = productListSlice.actions;\r\n\r\nexport default productListSlice.reducer;\r\n","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\Chip\\chipSlice.tsx",["95"],[],"import { PayloadAction, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport type ChipState = {\r\n  chips: any[];\r\n}\r\n\r\nconst initialState: ChipState = {\r\n  chips: []\r\n};\r\n\r\nexport const ChipSlice = createSlice({\r\n  name: \"chip\",\r\n  initialState,\r\n  reducers: {\r\n    addChip: (state, action: PayloadAction<any>) => {\r\n      state.chips.push(action.payload);\r\n    },\r\n    removeChip: (state, action: PayloadAction<any>) => {\r\n      const slugs = [...state.chips].filter(\r\n        (x) => x.id !== action.payload.id\r\n      );\r\n      state.chips = slugs;\r\n    },\r\n    clearChip: (state, action: PayloadAction<any>) => {\r\n      state.chips = action.payload;\r\n    } \r\n  }\r\n});\r\n\r\nexport const {\r\n  addChip,\r\n  removeChip,\r\n  clearChip\r\n} = ChipSlice.actions;\r\n\r\nexport default ChipSlice.reducer;\r\n","D:\\list react\\my-list-items\\src\\containers\\landing\\components\\Chip\\index.tsx",[],[],{"ruleId":"96","severity":1,"message":"97","line":1,"column":10,"nodeType":"98","messageId":"99","endLine":1,"endColumn":14},{"ruleId":"96","severity":1,"message":"100","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"102","line":1,"column":38,"nodeType":"98","messageId":"99","endLine":1,"endColumn":46},{"ruleId":"96","severity":1,"message":"103","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":23},{"ruleId":"96","severity":1,"message":"104","line":2,"column":25,"nodeType":"98","messageId":"99","endLine":2,"endColumn":48},{"ruleId":"105","severity":1,"message":"106","line":33,"column":5,"nodeType":"107","endLine":33,"endColumn":7,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"109","line":2,"column":41,"nodeType":"98","messageId":"99","endLine":2,"endColumn":54},{"ruleId":"110","severity":1,"message":"111","line":45,"column":14,"nodeType":"112","messageId":"113","endLine":45,"endColumn":16},{"ruleId":"105","severity":1,"message":"114","line":32,"column":5,"nodeType":"107","endLine":32,"endColumn":7,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":121,"column":27,"nodeType":"118","endLine":128,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":45,"column":14,"nodeType":"112","messageId":"113","endLine":45,"endColumn":16},{"ruleId":"96","severity":1,"message":"119","line":1,"column":25,"nodeType":"98","messageId":"99","endLine":1,"endColumn":41},"@typescript-eslint/no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Loading' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FixedSizeList' is defined but never used.","'ListChildComponentProps' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsersList'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'PayloadAction' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'getProductsList'. Either include it or remove the dependency array.",["121"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'createAsyncThunk' is defined but never used.",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [getUsersList]",{"range":"126","text":"127"},"Update the dependencies array to be: [getProductsList]",{"range":"128","text":"129"},[1229,1231],"[getUsersList]",[1182,1184],"[getProductsList]"]